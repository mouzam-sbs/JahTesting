@model CommonLayer.CommonModels.MadarsaExtensionRequestModel

@{
    ViewBag.Title = "MadarsaExtensionRequestDetails";
}


<h4>Madarsa Extension Request</h4>
<hr />



<div class="row">
    <div class="col-lg-4">

        <dl class="dl-horizontal table table-responsive table-bordered table-striped ">
            <dt>
                <strong>Description</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ShortDescription)
            </dd>

            <dt>
                <strong>Location</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Location)
            </dd>

            <dt>
                <strong>Area</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Area)
            </dd>

            <dt>
                <strong style="color:red">Constructed Cost</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ConstructionCost)
            </dd>

            <dt>
                <strong>Existing Floors</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ExistingFloors)
            </dd>

            <dt>
                <strong style="color:forestgreen">Amount Needed</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AmountNeeded)
            </dd>

            <dt>
                <strong style="color:skyblue">Engineer Name</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Engineer)
            </dd>

            <dt>
                <strong style="color:forestgreen">User Name</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.UserName)
            </dd>

            <dt>
                <strong style="color:royalblue">Madarsa Name</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MadarsaName)
            </dd>

            <dt>
                <strong style="color:blueviolet">Request Name</strong>
            </dt>

            <dd>
                @Html.DisplayFor(model => model.RequestTypeName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Elevation)
            </dt>

            <dd>
                @{
                    string base64Elev = string.Empty;
                    string ElevImg = string.Empty;
                    if (Model.Elevation != null)
                    {
                        base64Elev = Convert.ToBase64String(Model.Elevation);
                        ElevImg = string.Format("data:image/jpg;base64,{0}", base64Elev);
                    }

                }

                <div class="row">
                    <div class="col-md-4">
                        <div class="thumbnail">
                            <a href='@ElevImg'>
                                <img src='@ElevImg' alt="Lights" style="width:100%">

                            </a>
                        </div>
                    </div>
                </div>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Paln)
            </dt>

            <dd>

                @{
                    string baseplan = string.Empty;
                    string PlanImg = string.Empty;
                    if (Model.Paln != null)
                    {
                        baseplan = Convert.ToBase64String(Model.Paln);
                        PlanImg = string.Format("data:image/jpg;base64,{0}", baseplan);
                    }

                }

                <div class="row">
                    <div class="col-md-4">
                        <div class="thumbnail">
                            <a href='@PlanImg'>
                                <img src='@PlanImg' alt="Lights" style="width:100%">

                            </a>
                        </div>
                    </div>
                </div>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Doc1)
            </dt>

            <dd>

                @{
                    string baseDoc1 = string.Empty;
                    string Doc1Img = string.Empty;
                    if (Model.Doc1 != null)
                    {
                        baseDoc1 = Convert.ToBase64String(Model.Doc1);
                        Doc1Img = string.Format("data:image/jpg;base64,{0}", baseDoc1);
                    }

                }

                <div class="row">
                    <div class="col-md-4">
                        <div class="thumbnail">
                            <a href='@Doc1Img'>
                                <img src='@Doc1Img' alt="Lights" style="width:100%">

                            </a>
                        </div>
                    </div>
                </div>
            </dd>


            <dt>
                @Html.DisplayNameFor(model => model.Doc2)
            </dt>

            <dd>

                @{
                    string baseDoc2 = string.Empty;
                    string Doc2Img = string.Empty;
                    if (Model.Doc2 != null)
                    {
                        baseDoc2 = Convert.ToBase64String(Model.Doc2);
                        Doc2Img = string.Format("data:image/jpg;base64,{0}", baseDoc2);
                    }

                }

                <div class="row">
                    <div class="col-md-4">
                        <div class="thumbnail">
                            <a href='@Doc2Img'>
                                <img src='@Doc2Img' alt="Lights" style="width:100%">

                            </a>
                        </div>
                    </div>
                </div>
            </dd>


            <dt>
                @Html.DisplayNameFor(model => model.Doc3)
            </dt>

            <dd>

                @{
                    string baseDoc3 = string.Empty;
                    string Doc3Img = string.Empty;
                    if (Model.Doc3 != null)
                    {
                        baseDoc3 = Convert.ToBase64String(Model.Doc3);
                        Doc3Img = string.Format("data:image/jpg;base64,{0}", baseDoc3);
                    }

                }

                <div class="row">
                    <div class="col-md-4">
                        <div class="thumbnail">
                            <a href='@Doc3Img'>
                                <img src='@Doc3Img' alt="Lights" style="width:100%">

                            </a>
                        </div>
                    </div>
                </div>
            </dd>

            <dt>
                <strong>Pic1</strong>
            </dt>

            <dd>
                @{
                    string basePic1 = string.Empty;
                    string Pic1Img = string.Empty;
                    if (Model.Pic1 != null)
                    {
                        basePic1 = Convert.ToBase64String(Model.Pic1);
                        Pic1Img = string.Format("data:image/jpg;base64,{0}", basePic1);

                    }


                }

                <div class="row">
                    <div class="col-md-4">
                        <div class="thumbnail">
                            <a href='@Pic1Img'>
                                <img src='@Pic1Img' alt="Lights" style="width:100%">

                            </a>
                        </div>
                    </div>
                </div>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Pic2)
            </dt>

            <dd>
                @{
                    string basePic2 = string.Empty;
                    string Pic2Img = string.Empty;
                    if (Model.Pic2 != null)
                    {
                        basePic2 = Convert.ToBase64String(Model.Pic2);
                        Pic2Img = string.Format("data:image/jpg;base64,{0}", basePic2);
                    }

                }

                <div class="row">
                    <div class="col-md-4">
                        <div class="thumbnail">
                            <a href='@Pic2Img'>
                                <img src='@Pic2Img' alt="Lights" style="width:100%">

                            </a>
                        </div>
                    </div>
                </div>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Pic3)
            </dt>

            <dd>
                @{
                    string basePic3 = string.Empty;
                    string Pic3Img = string.Empty;
                    if (Model.Pic3 != null)
                    {
                        basePic3 = Convert.ToBase64String(Model.Pic3);
                        Pic3Img = string.Format("data:image/jpg;base64,{0}", basePic3);
                    }

                }

                <div class="row">
                    <div class="col-md-4">
                        <div class="thumbnail">
                            <a href='@Pic3Img'>
                                <img src='@Pic3Img' alt="Lights" style="width:100%">

                            </a>
                        </div>
                    </div>
                </div>
            </dd>
        </dl>
    </div>


    <div class="col-lg-3">
        <table class="table table-bordered">
            <tfoot>
                <tr>
                    <td>
                        @*<button class="btn btn-success btn-sm" type="button" id="btnAcceptRequest">

                            @*<span class="glyphicon glyphicon-thumbs-up" style="font-size:30px;"></span>
                            </button>
                            <button class="btn btn-danger btn-sm" type="button" id="btnAcceptReject">
                            <span class="glyphicon glyphicon-thumbs-down" style="font-size:30px;"></span>
                            </button>*@

                        @{
                            string btnColorLike = string.Empty;
                            string btnColorDisLike = string.Empty;
                            if (Model.LikeStatus != null && Model.LikeStatus == true)
                            {
                                btnColorLike = "green";
                            }
                            else if (Model.LikeStatus != null && Model.LikeStatus == false)
                            {
                                btnColorDisLike = "red";
                            }
                            else
                            {
                                btnColorLike = btnColorDisLike = "";
                            }

                            string cssBtnColorAgree = string.Empty;
                            string cssBtnColorDisAgree = string.Empty;
                            if (Model.IsAgreed != null && Model.IsAgreed == true)
                            {
                                cssBtnColorAgree = "success";
                            }
                            else if (Model.IsAgreed != null && Model.IsAgreed == false)
                            {
                                cssBtnColorDisAgree = "danger";
                            }
                            else
                            {
                                cssBtnColorAgree = cssBtnColorDisAgree = "default";
                            }
                        }
                        @if (Model.IsPanelHeadUser && Model.IsPanelInvolved)
                        {


                            <button class="btn-lg btn-@cssBtnColorAgree" type="button" id="btnAgree">
                                Agree
                            </button>
                            <button class="btn-lg btn-@cssBtnColorDisAgree" type="button" id="btnDisAgree">
                                DisAgree
                            </button>

                                <br />
                                <br />
                                <button class="btn-lg btn-default  " type="button" id="btnLike">
                                    <span class="glyphicon glyphicon-thumbs-up" style="font-size:30px;color:@btnColorLike ;"></span>
                                </button>

                                <button class="btn-lg btn-default  " type="button" id="btnDisLike">
                                    <span class="glyphicon glyphicon-thumbs-down" style="font-size:30px;color:@btnColorDisLike ;"></span>
                                </button>
                        }
                        else if (Model.IsPanelInvolved)
                        {
                            <button class="btn-lg btn-default  " type="button" id="btnLike">
                                <span class="glyphicon glyphicon-thumbs-up" style="font-size:30px;color:@btnColorLike ;"></span>
                            </button>

                            <button class="btn-lg btn-default  " type="button" id="btnDisLike">
                                <span class="glyphicon glyphicon-thumbs-down" style="font-size:30px;color:@btnColorDisLike ;"></span>
                            </button>

                        }
                        else
                        {
                            <button class="btn-lg btn-danger  " type="button" id="btnObject">
                                <span class="glyphicon glyphicon-ban-circle" style="font-size:30px;"></span>
                            </button>

                        }
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="col-lg-5">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab_1" data-toggle="tab" aria-expanded="true">Panel Member Opinion</a></li>
                <li class=""><a href="#tab_2" data-toggle="tab" aria-expanded="false">Internal Comment </a></li>
                @if (Model.IsPanelHeadUser)
                {
                    <li class=""><a href="#tab_3" data-toggle="tab" aria-expanded="false">External Comment</a></li>

                }
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tab_1">
                    <table class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <td>Pannel Member Name</td>
                                <td>IsLiked</td>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model.PaannelMemberLikeDisLike)
                            {
                                <tr>
                                    <td>@item.UserName</td>
                                    <td>
                                        @if (item.LikeStatus == true)
                                        {
                                            <button class="btn-lg btn-success  " type="button" id="btnDisLike">
                                                <span class="glyphicon glyphicon-thumbs-up" style="font-size:30px;"></span>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn-lg btn-danger  " type="button" id="btnDisLike">
                                                <span class="glyphicon glyphicon-thumbs-down" style="font-size:30px;"></span>
                                            </button>
                                        }

                                    </td>
                                </tr>

                            }
                        </tbody>
                    </table>

                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="tab_2">
                    <div class="row">
                        <div class="form-group">

                            <textarea class="form-control" id="txtComment"></textarea>
                            <br />
                            <button type="button" id="btnPostComment" class="btn  btn-primary">Post Internal Comment</button>
                        </div>
                    </div>
                    <table class="table table-hover table-condensed">
                        <thead>
                            <tr>
                                <td><b>Comments</b></td>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.PanelCommentList)
                            {
                                <tr>
                                    <td>
                                        @item.Comment
                                        <b><br />@item.UserName ,@item.UserTypeName</b><br />@item.CreatedDate
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>

                </div>
                <!-- /.tab-pane -->
                @if (Model.IsPanelHeadUser)
                {
                    <div class="tab-pane" id="tab_3">
                        <div class="row">
                           
                        </div>
                        <table class="table table-hover table-condensed">
                            <thead>
                                <tr>
                                    <td><b>Comments</b></td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.BoardCommentList)
                                {
                                    <tr>
                                        <td>
                                            @item.Comment
                                            <b><br />@item.UserName ,@item.UserTypeName</b><br />@item.CreatedDate
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
                }

                <!-- /.tab-pane -->
            </div>
            <!-- /.tab-content -->
        </div>

    </div>

</div>



@using (Html.BeginForm())
{
    <input type="hidden" value="@Model.MemberOpinionId" name="@Model.MemberOpinionId" id="txtMemberOpinionId" />


    <input type="hidden" value="@Model.AlreadyExistsInMemberOpinion.ToString()" name="AlreadyExistsInMemberOpinion" id="txtAlreadyExst" />
        <input type="hidden" value="@Model.UserId" name="@Model.UserId" id="txtUserId" />
        <input type="hidden" value="@Model.IsAgreed.ToString()" name="IsAgreed" id="txtIsAgreed" />
        <input type="hidden" value="@Model.LikeStatus.ToString()" name="@Model.LikeStatus" id="txtLikeStatus" />
        <input type="hidden" value="@Model.RequestSubmitId" name="@Model.RequestSubmitId" id="txtRequestSubmitId" />
        <input type="hidden" value="@Model.RequestTypeId" name="@Model.RequestTypeId" id="txtRequestTypeId" />
}
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $(document).on("click", "#btnAgree,#btnDisAgree,#btnLike,#btnDisLike,#btnObject", function (e) {
            //var url=
            var status = $("#txtIsAgreed").val();
            if ($(this).attr("id") == "btnAgree") {
                status = true;
            }
            else if ($(this).attr("id") == "btnDisAgree") {
                status = false;
            }
            else {
                status = $("#txtIsAgreed").val();
            }

            var likeStatus = $("#txtLikeStatus").val();
            if ($(this).attr("id") == "btnLike") {
                likeStatus = true;
            }
            else if ($(this).attr("id") == "btnDisLike") {
                likeStatus = false;
            }
            else {
                likeStatus = $("#txtLikeStatus").val();
            }

            var IsObject = false;
            var IsObjectClicked = false;
            if ($(this).attr("id") == "btnObject") {
                IsObject = true;
                IsObjectClicked = true;
            }
            var _panelModel = {
                MemberOpinionId: $("#txtMemberOpinionId").val(),
                AlreadyExistsInMemberOpinion: $("#txtAlreadyExst").val(),
                UserId: $("#txtUserId").val(),
                RequestSubmitId: $("#txtRequestSubmitId").val(),
                Status: status,
                LikeStatus: likeStatus,
                IsObject: IsObject,
                IsObjectClicked: IsObjectClicked
            };
            buttonDisabledReg();
            $.ajax({
                url: folderBaseUrl + "/PanelMember/PanelAgreeDisagree/ARMasjidExtension",
                type: "POST",
                data: _panelModel,
                success: function (response) {
                    //  $("#listCategory").empty().append(response);
                    location.reload();
                    buttonEnableReg();
                },
                error: function (err) {
                    toastr.error("Registration failed: Internal server error");
                    buttonEnableReg();
                    console.log(err);
                }
            });
        });

        $(document).on("click", "#btnPostComment", function (e) {
            var _registrationModel = {
                UserId: $("#txtUserId").val(),
                RequestSubmitId: $("#txtRequestSubmitId").val(),
                Comment: $("#txtComment").val(),

            };
            buttonDisabledReg();
            $.ajax({
                url: folderBaseUrl + "/PanelMember/PanelRequestComment/CommentOnMadarsaExtensionRequest",
                type: "POST",
                data: _registrationModel,
                success: function (response) {
                    //  $("#listCategory").empty().append(response);
                    location.reload();
                    buttonEnableReg();
                },
                error: function (err) {
                    toastr.error("Registration failed: Internal server error");
                    buttonEnableReg();


                    console.log(err);
                }
            });
        });

        $(document).on("click", "#btnPostBoardComment", function (e) {
            var _registrationModel = {
                UserId: $("#txtUserId").val(),
                RequestSubmitId: $("#txtRequestSubmitId").val(),
                Comment: $("#txtComment").val(),

            };
            buttonDisabledReg();
            $.ajax({
                url: folderBaseUrl + "/BoardMember/RequestComment/CommentOnMadarsaExtensionRequest",
                type: "POST",
                data: _registrationModel,
                success: function (response) {
                    //  $("#listCategory").empty().append(response);
                    location.reload();
                    buttonEnableReg();
                },
                error: function (err) {
                    toastr.error("Registration failed: Internal server error");
                    buttonEnableReg();
                    console.log(err);
                }
            });
        });


    });

    function buttonEnableReg() {
        $("#btnAcceptRequest span,#btnAcceptReject span").hide();
        $("#btnAcceptRequest,#btnAcceptReject").prop("disabled", false);
    }


    function buttonDisabledReg() {
        $("#btnAcceptRequest span,#btnAcceptReject span").show();
        $("#btnAcceptRequest,#btnAcceptReject").prop("disabled", true);
    }

</script>